const core = require("@actions/core");
const { request } = require("@octokit/request");
const github = require("@actions/github")

function parse_array(input_name) {
  const input_value = core.getInput(input_name)
  if (input_value === "") {
    return undefined; 
  }
  if (input_value === "<<EMPTY>>") {
    return [];
  }
  return input_value.split(",");
}

function parse_boolean(input_name) {
  const input_value = core.getInput(input_name)
  return input_value === "true"
}

function default_parse(input_name) {
  const input_value = core.getInput(input_name)
  if (!input_value) {
    if (input_name === 'owner') {
      return github.context.repo.owner
    } else if (input_name === 'repo') {
      return github.context.repo.repo
    }
  }
  return input_value || undefined
}

{{#each inputs}}
{{#if is_array}}
const {{{name}}} = parse_array("{{{name}}}");
{{else if is_boolean}}
const {{{name}}} = parse_boolean("{{{name}}}");
{{else}}
const {{{name}}} = default_parse("{{{name}}}");
{{/if}}
{{/each}}


const requestWithAuth = request.defaults({
  headers: {
    authorization: `Bearer ${token}`
  },
{{#if has_previews}}
  mediaType: {
    previews: [
    {{#each previews}}
      "{{{name}}}",
    {{/each}}
    ]
  } 
{{/if}}
});

requestWithAuth("{{{method}}} {{{path}}}", {
  {{#each inputs}}
    {{{name}}},
  {{/each}}
})
  .then(result => {
    console.log("result", result);
{{#if has_outputs}}
{{#each outputs}}
    if (result && result.data && result.data.{{{name}}}) {
      core.setOutput('{{{name}}}', result.data.{{{name}}})
    }
{{/each}}
    core.setOutput('status', result.status)
{{/if}}
  })
  .catch(error => {
    console.log("error", error);
    core.setFailed(error.message);
  });