name: Create a check run
description: |
  This action implements `POST` request to `/repos/{owner}/{repo}/check-runs`

inputs:
  token:
    description: |
      Token to authenticate the request
    required: true
  owner:
    description: |
      owner parameter
    required: true
  repo:
    description: |
      repo parameter
    required: true
  name:
    description: |
      The name of the check. For example, "code-coverage".
    required: true
  head_sha:
    description: |
      The SHA of the commit.
    required: true
  details_url:
    description: |
      The URL of the integrator's site that has the full details of the check.
    required: false
  external_id:
    description: |
      A reference for the run on the integrator's system.
    required: false
  status:
    description: |
      The current status. Can be one of `queued`, `in_progress`, or `completed`.
    required: false
  started_at:
    description: |
      The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
    required: false
  conclusion:
    description: |
      **Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. Can be one of `success`, `failure`, `neutral`, `cancelled`, `timed_out`, or `action_required`. When the conclusion is `action_required`, additional details should be provided on the site specified by `details_url`.   **Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`.
    required: false
  completed_at:
    description: |
      The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
    required: false
  output:
    description: |
      Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://developer.github.com/v3/checks/runs/#output-object) description.
    required: false
  actions:
    description: |
      Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://developer.github.com/v3/activity/events/types/#checkrunevent) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. See the [`actions` object](https://developer.github.com/v3/checks/runs/#actions-object) description. To learn more about check runs and requested actions, see "[Check runs and requested actions](https://developer.github.com/v3/checks/runs/#check-runs-and-requested-actions)." To learn more about check runs and requested actions, see "[Check runs and requested actions](https://developer.github.com/v3/checks/runs/#check-runs-and-requested-actions)."
    required: false

runs:
  using: node12
  main: index.js

