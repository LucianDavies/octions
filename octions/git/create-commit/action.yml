name: Create a commit
description: |
  This action implements `POST` request to `/repos/{owner}/{repo}/git/commits`

inputs:
  token:
    description: |
      Token to authenticate the request
    required: true
  owner:
    description: |
      owner parameter
    required: true
  repo:
    description: |
      repo parameter
    required: true
  message:
    description: |
      The commit message
    required: true
  tree:
    description: |
      The SHA of the tree object this commit points to
    required: true
  parents:
    description: |
      The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.
    required: true
  author:
    description: |
      Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.
    required: false
  committer:
    description: |
      Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.
    required: false
  signature:
    description: |
      The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.
    required: false

runs:
  using: node12
  main: index.js

