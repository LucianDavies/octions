name: Create a project card
description: |
  **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.  Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull request id, use the "[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)" endpoint.

inputs:
  token:
    description: |
      Token to authenticate the request
    required: true
  column_id:
    description: |
      column_id parameter
    required: true
  note:
    description: |
      The card's note content. Only valid for cards without another type of content, so you must omit when specifying `content_id` and `content_type`.
    required: false
  content_id:
    description: |
      The issue or pull request id you want to associate with this card. You can use the [List repository issues](https://developer.github.com/v3/issues/#list-repository-issues) and [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoints to find this id.   **Note:** Depending on whether you use the issue id or pull request id, you will need to specify `Issue` or `PullRequest` as the `content_type`.
    required: false
  content_type:
    description: |
      **Required if you provide `content_id`**. The type of content you want to associate with this card. Use `Issue` when `content_id` is an issue id and use `PullRequest` when `content_id` is a pull request id.
    required: false
  file_output:
    description: |
      Path to store full output of the action
    required: false
  custom_outputs:
    description: |
      Custom outputs to create for step. This has to be YAML multiline string literal `custom_outputs: \|<newline> output_name:path.in.result`
    required: false

runs:
  using: node12
  main: index.js

