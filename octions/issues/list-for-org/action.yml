name: List organization issues assigned to the authenticated user
description: |
  List issues in an organization assigned to the authenticated user.  **Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, "Issues" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.  Be aware that the `id` of a pull request returned from "Issues" endpoints will be an _issue id_. To find out the pull request id, use the "[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)" endpoint.

inputs:
  token:
    description: |
      Token to authenticate the request
    required: true
  org:
    description: |
      org parameter
    required: true
  filter:
    description: |
      Indicates which sorts of issues to return. Can be one of:   \* `assigned`: Issues assigned to you   \* `created`: Issues created by you   \* `mentioned`: Issues mentioning you   \* `subscribed`: Issues you're subscribed to updates for   \* `all`: All issues the authenticated user can see, regardless of participation or creation
    required: true
  state:
    description: |
      Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.
    required: true
  labels:
    description: |
      A list of comma separated label names. Example: `bug,ui,@high`
    required: true
  sort:
    description: |
      What to sort results by. Can be either `created`, `updated`, `comments`.
    required: true
  direction:
    description: |
      The direction of the sort. Can be either `asc` or `desc`.
    required: true
  since:
    description: |
      Only issues updated at or after this time are returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
    required: true
  per_page:
    description: |
      Results per page (max 100)
    required: true
  page:
    description: |
      Page number of the results to fetch.
    required: true
  file_output:
    description: |
      Path to store full output of the action
    required: false
  custom_outputs:
    description: |
      Custom outputs to create for step. This has to be YAML multiline string literal `custom_outputs: \|<newline> output_name:path.in.result`
    required: false

runs:
  using: node12
  main: index.js

