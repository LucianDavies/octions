name: Get a list of provisioned identities
description: |
  To filter for a specific email address, use the `email` query parameter and the `eq` operator:  Your filter would look like this cURL command:  Retrieves users that match the filter. In the example, we searched only for [octocat@github.com](mailto:octocat@github.com).  Retrieves a paginated list of all provisioned organization members, including pending invitations.

inputs:
  token:
    description: |
      Token to authenticate the request
    required: true
  org:
    description: |
      org parameter
    required: true
  startIndex:
    description: |
      Used for pagination: the index of the first result to return.
    required: true
  count:
    description: |
      Used for pagination: the number of results to return.
    required: true
  filter:
    description: |
      Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query: `?filter=userName%20eq%20\"Octocat\"`.
    required: true
  file_output:
    description: |
      Path to store full output of the action
    required: false

runs:
  using: node12
  main: index.js

